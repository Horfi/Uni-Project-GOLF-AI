package com.game.terrain.Maze;

public class MazeLayout {
   private static final int[][] mazeLayout = {
       {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
       {1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
       {1, 0, 1, 0, 1, 0, 1, 1, 0, 1},
       {1, 0, 1, 0, 0, 0, 1, 0, 0, 1},
       {1, 0, 1, 1, 1, 0, 1, 0, 1, 1},
       {1, 0, 0, 0, 1, 0, 1, 0, 0, 1},
       {1, 1, 1, 0, 1, 0, 1, 1, 0, 1},
       {1, 0, 0, 0, 1, 0, 1, 0, 0, 1},
       {1, 0, 1, 0, 1, 0, 1, 0, 0, 1},
       {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
   };

//    private static final int[][] mazeLayout = {
//            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
//            {1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
//            {1, 1, 1, 0, 1, 0, 1, 1, 0, 1},
//            {1, 0, 0, 0, 0, 0, 1, 0, 0, 1},
//            {1, 0, 1, 1, 1, 0, 1, 0, 1, 1},
//            {1, 0, 0, 0, 1, 0, 1, 0, 0, 1},
//            {1, 1, 1, 0, 1, 0, 1, 1, 0, 1},
//            {1, 0, 0, 0, 1, 0, 1, 0, 0, 1},
//            {1, 0, 1, 0, 1, 0, 1, 0, 0, 1},
//            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
//    };

//    private static final int[][] mazeLayout = {
//            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
//            {1, 0, 0, 1, 1, 0, 1, 0, 0, 1},
//            {1, 1, 0, 0, 1, 0, 1, 1, 0, 1},
//            {1, 0, 1, 0, 0, 0, 0, 0, 0, 1},
//            {1, 0, 1, 1, 1, 0, 1, 0, 1, 1},
//            {1, 0, 0, 0, 1, 0, 1, 0, 0, 1},
//            {1, 1, 1, 0, 1, 0, 1, 1, 0, 1},
//            {1, 0, 0, 0, 1, 0, 1, 0, 0, 1},
//            {1, 0, 1, 0, 1, 0, 0, 0, 0, 1},
//            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
//    };

// new maze to experiment
//    private static final int[][] mazeLayout = {
//            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
//            {1, 0, 0, 1, 1, 0, 1, 0, 0, 1},
//            {1, 0, 0, 0, 1, 0, 1, 1, 0, 1},
//            {1, 0, 1, 0, 0, 0, 0, 0, 0, 1},
//            {1, 0, 1, 1, 0, 0, 1, 0, 1, 1},
//            {1, 0, 0, 0, 1, 1, 1, 0, 0, 1},
//            {1, 1, 1, 0, 0, 0, 0, 1, 0, 1},
//            {1, 0, 0, 0, 0, 0, 1, 0, 0, 1},
//            {1, 0, 1, 0, 1, 0, 0, 0, 0, 1},
//            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
//    };

// new maze to experiment
// private static final int[][] mazeLayout = {
//                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
//                {1, 0, 0, 1, 1, 0, 0, 0, 0, 1},
//                {1, 0, 0, 0, 1, 0, 1, 0, 1, 1},
//                {1, 0, 1, 0, 1, 0, 0, 0, 1, 1},
//                {1, 1, 1, 0, 0, 0, 1, 0, 0, 1},
//                {1, 0, 0, 0, 1, 0, 1, 1, 0, 1},
//                {1, 0, 1, 1, 1, 1, 1, 1, 0, 1},
//                {1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
//                {1, 0, 1, 0, 0, 0, 1, 0, 0, 1},
//                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
//        };

//new maze to experiment
// private static final int[][] mazeLayout = {
//                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
//                {1, 0, 0, 0, 0, 1, 0, 1, 0, 1},
//                {1, 0, 1, 1, 0, 0, 0, 0, 0, 1},
//                {1, 0, 0, 1, 1, 1, 0, 1, 0, 1},
//                {1, 0, 0, 0, 0, 0, 1, 1, 0, 1},
//                {1, 1, 1, 0, 1, 0, 0, 0, 0, 1},
//                {1, 0, 0, 0, 0, 1, 0, 1, 1, 1},
//                {1, 0, 1, 1, 0, 0, 0, 0, 0, 1},
//                {1, 0, 0, 0, 1, 0, 1, 0, 0, 1},
//                {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
//        };
    

    public static int[][] getMazeLayout() {
        return mazeLayout;
    }

    public static boolean isWalkable(int x, int y) {
        if (x < 0 || y < 0 || x >= mazeLayout.length || y >= mazeLayout[0].length) {
            return false;
        }
        return mazeLayout[x][y] == 0;
    }
}

